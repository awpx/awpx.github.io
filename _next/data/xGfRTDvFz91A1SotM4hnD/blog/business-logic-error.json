{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var h=Object.create;var s=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var r=t=>s(t,\"__esModule\",{value:!0});var g=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),f=(t,a)=>{r(t);for(var n in a)s(t,n,{get:a[n],enumerable:!0})},b=(t,a,n)=>{if(a&&typeof a==\"object\"||typeof a==\"function\")for(let i of u(a))!m.call(t,i)&&i!==\"default\"&&s(t,i,{get:()=>a[i],enumerable:!(n=d(a,i))||n.enumerable});return t},y=t=>b(r(s(t!=null?h(p(t)):{},\"default\",t&&t.__esModule&&\"default\"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var c=g((B,l)=>{l.exports=_jsx_runtime});var I={};f(I,{default:()=>k,frontmatter:()=>w});var e=y(c()),w={title:\"[VULN/BUG] About Business Logic Error\",date:new Date(1645911854e3),lastmod:\"2022-02-26\",tags:[\"vuln\",\"bug\"],draft:!1,summary:'Summary of innformation about \"Business Logic Error\" bugs',layout:\"PostLayout\",authors:[\"default\"],canonicalUrl:\"https://awpx.github.io/blog/business-logic-error\"};function v(t={}){let{wrapper:a}=t.components||{};return a?(0,e.jsx)(a,Object.assign({},t,{children:(0,e.jsx)(n,{})})):n();function n(){let i=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",h3:\"h3\",ul:\"ul\",li:\"li\",p:\"p\",pre:\"pre\",code:\"code\",ol:\"ol\",strong:\"strong\"},t.components),{TOCInline:o}=i;return o||x(\"TOCInline\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(i.h2,{id:\"business-logic-error\",children:[(0,e.jsx)(i.a,{href:\"#business-logic-error\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Business Logic Error\"]}),(0,e.jsx)(o,{toc:t.toc,asDisclosure:!0}),(0,e.jsxs)(i.h3,{id:\"what-is-it-simple\",children:[(0,e.jsx)(i.a,{href:\"#what-is-it-simple\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"What is it? (simple)\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"It's when the normal functionality of a website or app allows an attacker to compromise/manipulate it.\"}),(0,e.jsx)(i.li,{children:'This is often as simple as \"getting things for free\" but can also be as complex as bypassing security features like authorisation.'}),(0,e.jsx)(i.li,{children:\"Many websites or apps have bugs (the traditional kind) like this or other, so we need to focus on what the security risk is.\"})]}),(0,e.jsxs)(i.h3,{id:\"what-make-them-great-first-bug\",children:[(0,e.jsx)(i.a,{href:\"#what-make-them-great-first-bug\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"What make them great first bug?\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"No need for deep technical knowledge\"}),(0,e.jsx)(i.li,{children:\"Can looking at web/app that you are already familiar with\"}),(0,e.jsx)(i.li,{children:\"Easy to find, but require some patient/presistence\"}),(0,e.jsx)(i.li,{children:\"Can be found by using one simple tool (burp)\"})]}),(0,e.jsxs)(i.h3,{id:\"how-to-find-them\",children:[(0,e.jsx)(i.a,{href:\"#how-to-find-them\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"How to find them?\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:'Figure out what the web/app (target) does, what is \"normal\".'}),(0,e.jsx)(i.li,{children:\"Make sure you know what all the buttons do.\"}),(0,e.jsx)(i.li,{children:\"Try to play around and do things you shouldn't.\"}),(0,e.jsx)(i.li,{children:\"You find it? Does this give you a security impact?\"}),(0,e.jsx)(i.li,{children:\"Yes? Write up the report and make sure you've got a payment method setup for your bounty!\"})]}),(0,e.jsxs)(i.h3,{id:\"case-study-example\",children:[(0,e.jsx)(i.a,{href:\"#case-study-example\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Case study example:\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsxs)(i.li,{children:[\"Response program can create bounty table - $500: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/460920\",children:\"https://hackerone.com/reports/460920\"})]}),(0,e.jsxs)(i.li,{children:[\"OLO Total price manipulation using negative quantities - $3,500: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/364843\",children:\"https://hackerone.com/reports/364843\"})]}),(0,e.jsxs)(i.li,{children:[\"Able to manipulate order amount by removing cancellation amount and cause financial impact: $750 - \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/614523\",children:\"https://hackerone.com/reports/614523\"})]}),(0,e.jsxs)(i.li,{children:[\"Gaining unlimited bonus points on websites with WooCommerce Points and Rewards - $150: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/592803\",children:\"https://hackerone.com/reports/592803\"})]}),(0,e.jsxs)(i.li,{children:[\"Lack of proper paymentProfileUUID validation allows any number of free rides without any outstanding balance - $1,500: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/574638\",children:\"https://hackerone.com/reports/574638\"})]}),(0,e.jsxs)(i.li,{children:[\"Lack of payment type validation in dial.uber.com allows for free rides - $5,000: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/162199\",children:\"https://hackerone.com/reports/162199\"})]}),(0,e.jsxs)(i.li,{children:[\"Harvesting all private invites using leave program fast-tracked invitation and security@ email forwarding feature - $2,500: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/334205\",children:\"https://hackerone.com/reports/334205\"}),\" and \",(0,e.jsx)(i.a,{href:\"https://medium.com/pinoywhitehat/harvesting-all-private-invites-using-leave-program-fast-tracked-invitation-and-security-email-a01c8b3ce76f\",children:\"https://medium.com/pinoywhitehat/harvesting-all-private-invites-using-leave-program-fast-tracked-invitation-and-security-email-a01c8b3ce76f\"})]}),(0,e.jsxs)(i.li,{children:[\"Claiming package names in GitLab's automatic package referencer. - $1,000: \",(0,e.jsx)(i.a,{href:\"https://hackerone.com/reports/462503\",children:\"https://hackerone.com/reports/462503\"})]})]}),(0,e.jsxs)(i.h3,{id:\"tips\",children:[(0,e.jsx)(i.a,{href:\"#tips\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Tips:\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"Payment Gateways or points system are great place to look\"}),(0,e.jsx)(i.li,{children:\"Look for ways to skip over steps\"}),(0,e.jsx)(i.li,{children:\"Parameters are always worth fiddling with\"}),(0,e.jsx)(i.li,{children:\"These bugs can be complex but also quite simple\"}),(0,e.jsxs)(i.li,{children:[\"Finding impact can be hard\",(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"Financial impact is easy to show\"}),(0,e.jsx)(i.li,{children:\"Other impact do exist.\"})]})]}),(0,e.jsxs)(i.li,{children:[\"APIs can be gold mines\",(0,e.jsx)(i.ul,{children:(0,e.jsx)(i.li,{children:\"It's very important to know how a website or app works first.\"})})]})]}),(0,e.jsxs)(i.h3,{id:\"references\",children:[(0,e.jsx)(i.a,{href:\"#references\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"References\"]}),(0,e.jsxs)(i.p,{children:[\"DISCLAIMER: This note is just a summary from this video \",(0,e.jsx)(i.a,{href:\"https://www.youtube.com/watch?v=RobCqW2KwGs\",children:\"https://www.youtube.com/watch?v=RobCqW2KwGs\"}),\", check out for more detailed explanation and practical tutorial.\"]}),(0,e.jsxs)(i.h2,{id:\"about-business-logic-error-from-other-source\",children:[(0,e.jsx)(i.a,{href:\"#about-business-logic-error-from-other-source\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"About Business Logic Error From Other Source\"]}),(0,e.jsxs)(i.h3,{id:\"definition\",children:[(0,e.jsx)(i.a,{href:\"#definition\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Definition\"]}),(0,e.jsx)(i.p,{children:\"Business logic vulnerabilities are flaws in the design and implementation of an application that allow an attacker to elicit unintended behavior. This potentially enables attackers to manipulate legitimate functionality to achieve a malicious goal. These flaws are generally the result of failing to anticipate unusual application states that may occur and, consequently, failing to handle them safely.\"}),(0,e.jsx)(i.pre,{children:(0,e.jsxs)(i.code,{className:\"code-highlight\",children:[(0,e.jsx)(i.span,{className:\"code-line\",children:`Note\n`}),(0,e.jsx)(i.span,{className:\"code-line\",children:`In this context, the term \"business logic\" simply refers to the set of rules that define how the application operates. As these rules aren't always directly related to a business, the associated vulnerabilities are also known as \"application logic vulnerabilities\" or simply \"logic flaws\".\n`})]})}),(0,e.jsx)(i.p,{children:\"Logic flaws are often invisible to people who aren't explicitly looking for them as they typically won't be exposed by normal use of the application. However, an attacker may be able to exploit behavioral quirks by interacting with the application in ways that developers never intended.\"}),(0,e.jsx)(i.p,{children:\"One of the main purposes of business logic is to enforce the rules and constraints that were defined when designing the application or functionality. Broadly speaking, the business rules dictate how the application should react when a given scenario occurs. This includes preventing users from doing things that will have a negative impact on the business or that simply don't make sense.\"}),(0,e.jsx)(i.p,{children:\"Flaws in the logic can allow attackers to circumvent these rules. For example, they might be able to complete a transaction without going through the intended purchase workflow. In other cases, broken or non-existent validation of user-supplied data might allow users to make arbitrary changes to transaction-critical values or submit nonsensical input. By passing unexpected values into server-side logic, an attacker can potentially induce the application to do something that it isn't supposed to.\"}),(0,e.jsx)(i.p,{children:\"Logic-based vulnerabilities can be extremely diverse and are often unique to the application and its specific functionality. Identifying them often requires a certain amount of human knowledge, such as an understanding of the business domain or what goals an attacker might have in a given context. This makes them difficult to detect using automated vulnerability scanners. As a result, logic flaws are a great target for bug bounty hunters and manual testers in general.\"}),(0,e.jsx)(i.p,{children:\"Business Logic Errors are ways of using the legitimate processing flow of an application in a way that results in a negative consequence to the organization. There are various cases where these errors can result in enormous business losses. A few notable test cases are mentioned below:\"}),(0,e.jsxs)(i.ol,{children:[(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"Business logic flaw in blogging\"}),\": A blogging portal was designed to ensure that initial posts do not contain profanity based on a list that the post is compared against. If a word on the profanity list is found, the blog post submission is not accepted. But, once a submission has been accepted, the user can edit the article and update its contents. When saving this edited article, the blog post is not checked against the profanity list. As a result, the original business rule has been bypassed and posts can contain profanity\"]})}),(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"Exploiting an e-commerce store\"}),\": A broken session management can be extremely harmful, in a particular scenario when an attacker is checking out of cart, he can inject lower costs then the actual calculated by the application logic. In such scenarios attacker causes a lot of damage to the application.\"]})}),(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.strong,{children:\"The loyalty program hack\"}),\": In another typical scenario, if a loyalty program is in existence with purchases, as soon as the attacker makes a purchase the points get added to their account but if he cancels the purchase the points does not get deducted.\"]})})]}),(0,e.jsx)(i.p,{children:\"Most security problems are weaknesses in an application that result from a broken or missing security control (authentication, access control, input validation, etc\\u2026). By contrast, business logic vulnerabilities are ways of using the legitimate processing flow of an application in a way that results in a negative consequence to the organization. For example:\"}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"Purchase orders are not processed before midnight\"}),(0,e.jsx)(i.li,{children:\"Written authorization is not on file before web access is granted\"}),(0,e.jsx)(i.li,{children:\"Transactions in excess of $2000 are not reviewed by a person\"})]}),(0,e.jsx)(i.p,{children:\"Many articles that describe business logic problems simply take an existing and well understood web application security problem and discuss the business consequence of the vulnerability. True business logic problems are actually different from the typical security vulnerability. Here are some examples of problems that are not business logic vulnerabilities:\"}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"Performing a denial of service by locking an auction user\\u2019s account\"}),(0,e.jsx)(i.li,{children:\"Posting unvalidated input publically\"}),(0,e.jsx)(i.li,{children:\"Cracking MD5 hashes\"}),(0,e.jsx)(i.li,{children:\"Brute forcing a password recovery scheme\"})]}),(0,e.jsx)(i.p,{children:\"Too often, the business logic category is used for vulnerabilities that can\\u2019t be scanned for automatically. This makes it very difficult to apply any kind of categorization scheme. Business logic problems are different from authentication problems and every other category. There are many signficant business logic vulnerabilities, but they are far less common than the type of items in the OWASP Top Ten for example.\"}),(0,e.jsx)(i.p,{children:\"A nice rule-of-thumb to use is that if you need to truly understand the business to understand the vulnerability, you might have a business-logic problem on your hands. If you don\\u2019t understand the business, you can\\u2019t see business logic flaws.\"}),(0,e.jsxs)(i.h3,{id:\"how-do-business-logic-vulnerabilities-arise\",children:[(0,e.jsx)(i.a,{href:\"#how-do-business-logic-vulnerabilities-arise\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"How do business logic vulnerabilities arise?\"]}),(0,e.jsx)(i.p,{children:\"Business logic vulnerabilities often arise because the design and development teams make flawed assumptions about how users will interact with the application. These bad assumptions can lead to inadequate validation of user input. For example, if the developers assume that users will pass data exclusively via a web browser, the application may rely entirely on weak client-side controls to validate input. These are easily bypassed by an attacker using an intercepting proxy.\"}),(0,e.jsx)(i.p,{children:\"Ultimately, this means that when an attacker deviates from the expected user behavior, the application fails to take appropriate steps to prevent this and, subsequently, fails to handle the situation safely.\"}),(0,e.jsx)(i.p,{children:\"Logic flaws are particularly common in overly complicated systems that even the development team themselves do not fully understand. To avoid logic flaws, developers need to understand the application as a whole. This includes being aware of how different functions can be combined in unexpected ways. Developers working on large code bases may not have an intimate understanding of how all areas of the application work. Someone working on one component could make flawed assumptions about how another component works and, as a result, inadvertently introduce serious logic flaws. If the developers do not explicitly document any assumptions that are being made, it is easy for these kinds of vulnerabilities to creep into an application.\"}),(0,e.jsxs)(i.h3,{id:\"consequences--impact\",children:[(0,e.jsx)(i.a,{href:\"#consequences--impact\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Consequences & Impact\"]}),(0,e.jsx)(i.p,{children:\"The impact of business logic vulnerabilities can, at times, be fairly trivial. It is a broad category and the impact is highly variable. However, any unintended behavior can potentially lead to high-severity attacks if an attacker is able to manipulate the application in the right way. For this reason, quirky logic should ideally be fixed even if you can't work out how to exploit it yourself. There is always a risk that someone else will be able to.\"}),(0,e.jsx)(i.p,{children:\"Fundamentally, the impact of any logic flaw depends on what functionality it is related to. If the flaw is in the authentication mechanism, for example, this could have a serious impact on your overall security. Attackers could potentially exploit this for privilege escalation, or to bypass authentication entirely, gaining access to sensitive data and functionality. This also exposes an increased attack surface for other exploits.\"}),(0,e.jsx)(i.p,{children:\"Flawed logic in financial transactions can obviously lead to massive losses for the business through stolen funds, fraud, and so on.\"}),(0,e.jsx)(i.p,{children:\"You should also note that even though logic flaws may not allow an attacker to benefit directly, they could still allow a malicious party to damage the business in some way.\"}),(0,e.jsx)(i.p,{children:\"We have seen many cases where companies end up losing important customer data in cyber thefts. The consequences vary depending on the nature of the web application. Due to existence of flaws in the business logic, hackers have managed to buy products from e-commerce stores at lower prices than originally they were listed for.\"}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"User Privilege Escalation\"}),(0,e.jsx)(i.li,{children:\"Access to Unauthorized Information\"}),(0,e.jsx)(i.li,{children:\"Identity Extraction\"}),(0,e.jsx)(i.li,{children:\"Overwrite records in the Database\"}),(0,e.jsx)(i.li,{children:\"Manipulating Shopping Cart & Payment Systems\"}),(0,e.jsx)(i.li,{children:\"Getting More Discounts\"}),(0,e.jsx)(i.li,{children:\"Extending Subscription\"}),(0,e.jsx)(i.li,{children:\"Downloading Data of other Users\"}),(0,e.jsx)(i.li,{children:\"Bypass Security Restrictions\"}),(0,e.jsx)(i.li,{children:\"Circumvent Captcha Codes\"}),(0,e.jsx)(i.li,{children:\"Denial of Service\"})]}),(0,e.jsxs)(i.h3,{id:\"why-are-business-logic-errors-difficult-to-find\",children:[(0,e.jsx)(i.a,{href:\"#why-are-business-logic-errors-difficult-to-find\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Why are Business Logic errors difficult to find?\"]}),(0,e.jsx)(i.p,{children:\"As the name suggests, Business Logic Errors are logical errors requiring sophisticated testing mechanisms to uncover these issues. They are difficult to uncover because:\"}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\"Security Scanners can not identify them. Security Scanners find known security vulnerabilities and Weak Development Practices, however they may not understand the business rules while testing\"}),(0,e.jsx)(i.li,{children:\"Intrusion Detection Systems and Web Application Firewalls cannot detect Business Logic Errors. These systems are designed to identify known malicious attacks like SQLi, XSS, Bad Bots. However, business logic errors are logic leaks and legitimate looking. They may not be detected by WAFs in some cases.\"}),(0,e.jsx)(i.li,{children:\"Application Specific Knowledge is Required as what may be a security flaw in one application may not be in another. The business rules vary with the web application.\"})]}),(0,e.jsxs)(i.h3,{id:\"examples-of-vuln-with-lab-portswigger\",children:[(0,e.jsx)(i.a,{href:\"#examples-of-vuln-with-lab-portswigger\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Examples of Vuln with LAB (portswigger)\"]}),(0,e.jsx)(i.p,{children:\"Examples of logic flaws include:\"}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws/examples#excessive-trust-in-client-side-controls\",children:\"Excessive trust in client-side controls LABS\"})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws/examples#failing-to-handle-unconventional-input\",children:\"Failing to handle unconventional input LABS\"})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws/examples#making-flawed-assumptions-about-user-behavior\",children:\"Making flawed assumptions about user behavior LABS\"})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws/examples#domain-specific-flaws\",children:\"Domain-specific flaws LABS\"})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws/examples#providing-an-encryption-oracle\",children:\"Providing an encryption oracle LABS\"})})]}),(0,e.jsxs)(i.h3,{id:\"source\",children:[(0,e.jsx)(i.a,{href:\"#source\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(i.span,{className:\"icon icon-link\"})}),\"Source\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsxs)(i.li,{children:[(0,e.jsx)(i.a,{href:\"https://www.getastra.com/blog/knowledge-base/business-logic-errors-need-know/#:~:text=Business%20Logic%20Errors%20are%20ways,result%20in%20enormous%20business%20losses\",children:\"https://www.getastra.com/blog/knowledge-base/business-logic-errors-need-know/#:~:text=Business%20Logic%20Errors%20are%20ways,result%20in%20enormous%20business%20losses\"}),\".\"]}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws\",children:\"https://portswigger.net/web-security/logic-flaws\"})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://portswigger.net/web-security/logic-flaws/examples\",children:\"https://portswigger.net/web-security/logic-flaws/examples\"})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.a,{href:\"https://owasp.org/www-community/vulnerabilities/Business_logic_vulnerability\",children:\"https://owasp.org/www-community/vulnerabilities/Business_logic_vulnerability\"})})]})]})}}var k=v;function x(t,a){throw new Error(\"Expected \"+(a?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return I;})();\n;return Component;","toc":[{"value":"Business Logic Error","url":"#business-logic-error","depth":2},{"value":"What is it? (simple)","url":"#what-is-it-simple","depth":3},{"value":"What make them great first bug?","url":"#what-make-them-great-first-bug","depth":3},{"value":"How to find them?","url":"#how-to-find-them","depth":3},{"value":"Case study example:","url":"#case-study-example","depth":3},{"value":"Tips:","url":"#tips","depth":3},{"value":"References","url":"#references","depth":3},{"value":"About Business Logic Error From Other Source","url":"#about-business-logic-error-from-other-source","depth":2},{"value":"Definition","url":"#definition","depth":3},{"value":"How do business logic vulnerabilities arise?","url":"#how-do-business-logic-vulnerabilities-arise","depth":3},{"value":"Consequences & Impact","url":"#consequences--impact","depth":3},{"value":"Why are Business Logic errors difficult to find?","url":"#why-are-business-logic-errors-difficult-to-find","depth":3},{"value":"Examples of Vuln with LAB (portswigger)","url":"#examples-of-vuln-with-lab-portswigger","depth":3},{"value":"Source","url":"#source","depth":3}],"frontMatter":{"readingTime":{"text":"10 min read","minutes":9.46,"time":567600,"words":1892},"slug":"business-logic-error","fileName":"business-logic-error.mdx","title":"[VULN/BUG] About Business Logic Error","date":"2022-02-26T21:44:14.000Z","lastmod":"2022-02-26","tags":["vuln","bug"],"draft":false,"summary":"Summary of innformation about \"Business Logic Error\" bugs","layout":"PostLayout","authors":["default"],"canonicalUrl":"https://awpx.github.io/blog/business-logic-error"}},"authorDetails":[{"readingTime":{"text":"3 min read","minutes":2.715,"time":162900,"words":543},"slug":["default"],"fileName":"default.md","name":"Andika Wijaya Putra","avatar":"/static/images/avatar1.png","occupation":"IT Developer & Security Researcher","email":"awpxwork@gmail.com","twitter":"https://twitter.com/awpx_","linkedin":"https://www.linkedin.com/in/awpx","github":"https://github.com/awpx","date":null}],"prev":{"title":"[CTF Writeups] CTF \"Trojanwar\" Writeups ","date":"2022-02-20T19:32:14.000Z","lastmod":"2022-01-24","tags":["ctf","writeups"],"draft":false,"summary":"This is a write up of a TrojanWar CTF challenge that i solved as part of assignment for the (C****ti IT Security Analyst - Red Team) recruitment process, which in the end I did not pass the interview stage","layout":"PostLayout","authors":["default"],"canonicalUrl":"https://awpx.github.io/blog/trojanwar-writeup","slug":"trojanwar-writeup"},"next":{"title":"[VULN/BUG] About Blind XSS & XSS Hunter","date":"2022-05-21T22:52:14.000Z","lastmod":"2022-05-21","tags":["vuln","bug"],"draft":false,"summary":"My notes / documentation about \"Blind XSS & XSS Hunter\"","layout":"PostLayout","authors":["default"],"canonicalUrl":"https://awpx.github.io/blog/blind-xss-and-xss-hunter","slug":"blind-xss-and-xss-hunter"}},"__N_SSG":true}